{"ast":null,"code":"var _jsxFileName = \"/Users/viviankwong/WebDev102/web102_unit7lab/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport ReadPosts from './pages/ReadPosts';\nimport CreatePost from './pages/CreatePost';\nimport EditPost from './pages/EditPost';\nimport { Link } from 'react-router-dom';\nimport { supabase } from './client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const descr = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.';\n  useEffect(() => {\n    // READ all post from table\n    const fetchPosts = async () => {\n      const {\n        data\n      } = await supabase.from('Posts').select(); // set state of posts\n\n      setPosts(data);\n    };\n\n    fetchPosts();\n  }, []); // Sets up routes\n\n  let element = useRoutes([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(ReadPosts, {\n      data: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this)\n  }, {\n    path: \"/edit/:id\",\n    element: /*#__PURE__*/_jsxDEV(EditPost, {\n      data: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/new\",\n    element: /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this)\n  }]);\n\n  const calculateColorStatistics = () => {\n    const colorCounts = {}; // Count the number of crewmates for each color\n\n    posts.forEach(post => {\n      const color = post.description.toLowerCase();\n      colorCounts[color] = (colorCounts[color] || 0) + 1;\n    }); // Calculate percentages\n\n    const totalCrewmates = posts.length;\n    const colorPercentages = {};\n\n    for (const color in colorCounts) {\n      const count = colorCounts[color];\n      const percentage = count / totalCrewmates * 100;\n      colorPercentages[color] = percentage.toFixed(2) + '%';\n    }\n\n    return colorPercentages;\n  };\n\n  const colorStatistics = calculateColorStatistics();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Crewmate Creator!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here is where you can create your very own set of crewmates before sending them off into space!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"headerBtn\",\n          children: \" Crewmate Gallery \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/new\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"headerBtn\",\n          children: \" Create a Crewmate! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Color Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(colorStatistics).map(_ref => {\n            let [color, percentage] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [color.charAt(0).toUpperCase() + color.slice(1), \": \", percentage]\n            }, color, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), element]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"1XdKLcfM1h1KJJWeC1lAzl2DGvQ=\", false, function () {\n  return [useRoutes];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRoutes","ReadPosts","CreatePost","EditPost","Link","supabase","App","posts","setPosts","descr","fetchPosts","data","from","select","element","path","calculateColorStatistics","colorCounts","forEach","post","color","description","toLowerCase","totalCrewmates","length","colorPercentages","count","percentage","toFixed","colorStatistics","Object","entries","map","charAt","toUpperCase","slice"],"sources":["/Users/viviankwong/WebDev102/web102_unit7lab/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom'\nimport ReadPosts from './pages/ReadPosts'\nimport CreatePost from './pages/CreatePost'\nimport EditPost from './pages/EditPost'\nimport { Link } from 'react-router-dom'\nimport { supabase } from './client'\n\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const descr = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.'\n\n  useEffect(() => {\n    // READ all post from table\n    const fetchPosts = async () => {\n      const {data} = await supabase\n        .from('Posts')\n        .select();\n\n      // set state of posts\n      setPosts(data)\n    }\n    fetchPosts();\n  }, []); \n\n  // Sets up routes\n  let element = useRoutes([\n    {\n      path: \"/\",\n      element:<ReadPosts data={posts}/>\n    },\n    {\n      path:\"/edit/:id\",\n      element: <EditPost data={posts} />\n    },\n    {\n      path:\"/new\",\n      element: <CreatePost />\n    }\n  ]);\n\n  const calculateColorStatistics = () => {\n    const colorCounts = {};\n\n    // Count the number of crewmates for each color\n    posts.forEach(post => {\n      const color = post.description.toLowerCase();\n      colorCounts[color] = (colorCounts[color] || 0) + 1;\n    });\n\n    // Calculate percentages\n    const totalCrewmates = posts.length;\n    const colorPercentages = {};\n\n    for (const color in colorCounts) {\n      const count = colorCounts[color];\n      const percentage = (count / totalCrewmates) * 100;\n      colorPercentages[color] = percentage.toFixed(2) + '%';\n    }\n\n    return colorPercentages;\n  };\n\n  const colorStatistics = calculateColorStatistics();\n\n  return ( \n\n    <div className=\"App\">\n\n      <div className=\"header\">\n        <h1>Welcome to the Crewmate Creator!</h1>\n        <p>Here is where you can create your very own set of crewmates before sending them off into space!</p>\n        <Link to=\"/\"><button className=\"headerBtn\"> Crewmate Gallery </button></Link>\n        <Link to=\"/new\"><button className=\"headerBtn\"> Create a Crewmate! </button></Link>\n        <div className=\"statistics\">\n          <h2>Color Statistics</h2>\n          <ul>\n            {Object.entries(colorStatistics).map(([color, percentage]) => (\n              <li key={color}>\n                {color.charAt(0).toUpperCase() + color.slice(1)}: {percentage}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n        {element}\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}